1Q)Write a java program to display reverse of a string?

input:
	hello

output:
	olleh 


ex:

import java.util.Scanner;
class Test
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the String :");
		String str=sc.nextLine();// hello 

		//convert given string to char array 
		char[] carr=str.toCharArray();

		String rev="";

		for(int i=carr.length-1;i>=0;i--)
		{
			rev+=carr[i];
		}

		System.out.println("Reverse of a string is ="+rev);

	}
}


2Q)Write a java program to find out given string is palindrome or not?

input:
	madam

output:
	It is a palindrome string


ex:
---
import java.util.Scanner;
class Test
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the String :");
		String str=sc.nextLine();// hello 

		//convert given string to char array 
		char[] carr=str.toCharArray();

		String rev="";

		for(int i=carr.length-1;i>=0;i--)
		{
			rev+=carr[i];
		}

		if(str.equals(rev))
			System.out.println("It is a palindrome String");
		else
			System.out.println("It is not a palindrome string");
	}
}

3Q)Write a java program to display reverse of a sentence?

input:
	This Is Java Class
	
output:
	Class Java Is This

ex:
---
import java.util.Scanner;
class Test
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the String :");
		String str=sc.nextLine();// This Is Java Class

		//split the string
		String[] sarr=str.split(" ");

		//reading reverse
		for(int i=sarr.length-1;i>=0;i--)
		{
			System.out.print(sarr[i]+" ");
		}

		
	}
}

4Q)Write a java program to display reverse of a word in a given string?

input:
	This Is Java Class

output:

	sihT sI avaJ ssalC 

ex:
-----
import java.util.Scanner;
class Test
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the String :");
		String str=sc.nextLine();// This Is Java Class

		//split the string
		String[] sarr=str.split(" "); //This     Is       Java     Class

		//reading the string from string array
		for(String s:sarr) //This
		{
			//convert string to char array
			char[] carr=s.toCharArray();//T  h   i   s
				
			//read reverse
			for(int i=carr.length-1;i>=0;i--)
			{
				System.out.print(carr[i]);
			}
			//space
			System.out.print(" ");
		}
	}
}

5Q)Write a java program to display duplicate characters from given string?

input:
	google 

output:
	og 

ex:

class Test
{
	public static void main(String[] args) 
	{
		String str="google";

		String characters="";
		String duplicates="";

		for(int i=0;i<str.length();i++)
		{
			//reading the character from given string
			//convert the character to String
			String current=Character.toString(str.charAt(i));  

			if(characters.contains(current))
			{
				if(!(duplicates.contains(current)))
				{
					duplicates+=current;
					continue;
				}
			}
			characters+=current;
		}

		System.out.println(duplicates);
	}
}


6Q)Write a java program to display unique/distinct characters from given string?

input:
	google 

output:
	gole


class Test
{
	public static void main(String[] args) 
	{
		String str="google";

		String characters="";
		String duplicates="";

		for(int i=0;i<str.length();i++)
		{
			//reading the character from given string
			//convert the character to String
			String current=Character.toString(str.charAt(i));  

			if(characters.contains(current))
			{
				if(!(duplicates.contains(current)))
				{
					duplicates+=current;
					continue;
				}
			}
			characters+=current;
		}

		System.out.println(characters);
	}
}

7Q)Write a java program to check given strings is Anagram or not?

input:
	String str1="silent";
	String str2="listen";

output:
	It is a Anagram string 

ex:
----
import java.util.Arrays;
class Test
{
	public static void main(String[] args) 
	{
		String str1="silent";  // e i l n s t  
		String str2="listen";  // e i l n s t	

		int len1=str1.length();
		int len2=str2.length();

		if(len1!=len2)
		{
			System.out.println("It is not a Anagram string");
			System.exit(0);
		}

		//converting string to char array
		char[] carr1=str1.toCharArray();
		char[] carr2=str2.toCharArray();

		//sorting order
		Arrays.sort(carr1);
		Arrays.sort(carr2);

		//compare the characters
		for(int i=0;i<carr1.length;i++)
		{
			if(carr1[i]!=carr2[i])
			{
				System.out.println("It is not a Anagram string");
				System.exit(0);
			}
		}

		System.out.println("It is a Anagram string");
	}	
}


8Q)Java program for below code?

input:
	A1B2C3

output:
	AABBCCC

package com.ihub.www;

import java.util.Scanner;
public class Test
{
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the string :");
		String str = sc.nextLine();
		for (int i = 0; i<str.length(); i++)
		{
			if (Character.isAlphabetic(str.charAt(i)))
			{
				System.out.print(str.charAt(i));
			}else{
				int a = Character.getNumericValue(str.charAt(i));
				for (int j =1; j<a; j++)
				{
					System.out.print(str.charAt(i-1));
				}
			}

		}
	}
}


9Q) Write a java program to find out duplicate occurrence in a given String?

Example
Input:
	I am am Learning java java
Output:
	I=1 , am=2, Learning=1, java=2


import java.util.*;
class Test
{
public static void main(String[] args)
{
	findDuplicatesWords("I am am Learning java java");
}
public static void findDuplicatesWords(String str)
{
	LinkedHashMap<String,Integer> lhm=new LinkedHashMap<String,Integer>();

	String[] s=str.split(" ");
	
	for(String tempString: s)
	{
		if(lhm.get(tempString)!=null)
		{
			lhm.put(tempString,lhm.get(tempString)+1);
		}
		else
		{
			lhm.put(tempString,1);
		}
	}
	System.out.println(lhm);
	}
}









10Q) Write a java program to find out number of characters occurrence in String?

Example
Input:
	java
Output:
	j=1, a=2, v=1



import java.util.*;
class Test
{
	public static void main(String[] args)
	{
		findDuplicatesCharacters("java");
	}

	public static void findDuplicatesCharacters(String str)
	{
	LinkedHashMap<Character,Integer> lhm=new LinkedHashMap<Character,Integer>();
	for(int i=0;i<str.length();i++)
	{

		char c=str.charAt(i);
		if(lhm.get(c)!=null)
		{
			lhm.put(c,lhm.get(c)+1);
		}
		else
		{
			lhm.put(c,1);
		}
	}
	System.out.println(lhm);
	}
}






CODETRU programs
===============
11Q)Write a java program for below code?

input:
	abc

output:
	6

package com.ihub.www;

import java.util.Scanner;
public class Test
{
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);

		System.out.println("Enter the word :");
		String word = sc.nextLine();
		
		char[] carr=word.toCharArray();
		
		int sum=0;
		for(char ch:carr)
		{
			sum=sum+1+ch-'a';
		}
		System.out.println(sum);
	}
}	


12Q)Write a java program to find out differences between two arrays using max and min and display result element is even or odd?

package com.ihub.www;

import java.util.Scanner;
public class Test
{
	public static void main(String[] args)
	{
		int[] arr1={3,5,7,7,4,8};
		int[] arr2={3,5,7,7,0,8};
		
		int max1=arr1[0];
		int min1=arr1[0];
		for(int i=0;i<arr1.length;i++)
		{
			if(arr1[i]>max1)
				max1=arr1[i];
			else if(arr1[i]<min1)
				min1=arr1[i];		
		}
		System.out.println("Difference of max and min is ="+(max1-min1));
		
		int max2=arr2[0];
		int min2=arr2[0];
		for(int i=0;i<arr2.length;i++)
		{
			if(arr2[i]>max2)
				max2=arr2[i];
			else if(arr2[i]<min2)
				min2=arr2[i];		
		}
		System.out.println("Difference of max and min is ="+(max2-min2));
		
		if(((max1-min1)%2==0) && ((max2-min2)%2==0))
			System.out.println("It is even number");
		else
			System.out.println("It is odd number");
		
	}
}


13Q)Write a java program to display longest run of a character and occurance in a given string?

package com.ihub.www;

import java.util.Scanner;
public class Test
{
	public static void main(String[] args)
	{
		String s="abbc";
		
		char[] array = s.toCharArray();
				int count = 1;
				int max = 0;
				char maxChar = 0;
				for(int i=1; i<array.length; i++){ // Start from 1 since we want to compare it with the char in index 0
				    if(array[i]==array[i-1]){
				        count++;
				    } else {
				        if(count>max){  // Record current run length, is it the maximum?
				            max=count;
				            maxChar=array[i-1];
				        }
				        count = 1; // Reset the count
				    }
				}
				if(count>max){
				    max=count; // This is to account for the last run
				}
				System.out.println("Longest run: "+max+", for the character "+maxChar);
		
	}
}
